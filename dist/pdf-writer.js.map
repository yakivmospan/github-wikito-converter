{"version":3,"sources":["../src/pdf-writer.js"],"names":[],"mappings":"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","file":"pdf-writer.js","sourcesContent":["\"use strict\"\n\nvar wkhtmltopdf = require('wkhtmltopdf')\n  , Promise = require(\"bluebird\")\n  , helpers = require('./helpers')\n  , fs = require('fs-extra')\n  , logger = require('./logger')\n  , BaseWriter = require('./base-writer')\n\nclass PdfWriter extends BaseWriter {\n\n  getExtension() {\n    return 'pdf'\n  }\n\n  getPageBreaker(pageTitle, pageId) {\n    return `<h1 id=\"${pageId}\" style=\"page-break-before: always !important;\">${pageTitle}</h1>`\n  }\n\n  write() {\n\n    var html = this.buildHeader(),\n        pages = this.converter.getPages(),\n        filename = this.getFilename(),\n        footer = this.converter.getOption('footer'),\n        pdfPageCount = this.converter.getOption('pdfPageCount'),\n        self = this\n\n    logger.debug('Generating pdf: %d pages to generate', pages.length)\n\n    pages.forEach(page => {\n      var pdfPage = this.getPageBreaker(page.title, page.pageId) + page.html\n      html += pdfPage\n    }, this)\n\n    html += this.buildFooter()\n\n    return new Promise(function (resolve, reject) {\n      let options = {\n        toc : false, outline: true,\n        marginLeft: 10, marginRight: 10,\n        footerLine: false, footerSpacing: 2.5,\n        footerFontSize: 10, pageOffset: 0\n      }\n\n      if(footer){\n        options.footerLeft = footer\n      }\n\n      if(pdfPageCount){\n        options.footerRight = \"[page]/[toPage]\"\n      }\n\n      wkhtmltopdf(html, options)\n        .on('end', function() {\n          logger.info(self.getExtension() + ' file written: %s', filename)\n          resolve(filename)\n        })\n        .on('error', reject)\n        .pipe(fs.createWriteStream(filename))\n    }.bind(this))\n  }\n\n  buildHeader() {\n\n    var htmlHeader = `<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>${this.converter.getOption('title')}</title>\n    ${this.getCssTags()}\n    <style>${this.getExtraCss()}</style>\n    ${this.getJsTags()}\n  </head>\n  <body id=\"page-top\" class=\"pdf-doc\">\n\n    <!-- Cover page -->\n\n    ${this.getLogoImage()}\n\n    <div class='covertitle'>\n      <b>${this.converter.getOption('title')}</b>\n    </div>\n\n    <!-- Cover page -->\n    <div class='nav-container'>\n      <h1 class='toc'>${this.converter.getOption('tocTitle')}</h1>\n    ${this.converter.getToc().getHtml()}\n    </div>\n`\n    return htmlHeader\n  }\n\n\n  buildFooter() {\n    var footer = `\n  </body>\n</html>`\n\n    return footer\n  }\n  createImageLogoTag(path) {\n        return `<img class=\"coverimg\" src=\"${path}\"/>`\n  }\n}\n\nmodule.exports = PdfWriter\n"]}