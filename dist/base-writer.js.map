{"version":3,"sources":["../src/base-writer.js"],"names":[],"mappings":"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","file":"base-writer.js","sourcesContent":["\"use strict\"\r\n\r\nvar fs = require('fs-extra')\r\n  , path = require('path')\r\n  , util = require('util')\r\n  , logger = require('./logger')\r\n  , Promise = require(\"bluebird\")\r\n  , datauri = require('datauri').sync\r\n\r\nclass BaseWriter {\r\n\r\n  /**\r\n   *\r\n   * @param {GWC} GWC instance\r\n   */\r\n  constructor(converter) {\r\n    this.converter = converter\r\n  }\r\n\r\n  write(filename, html) {\r\n    var self = this\r\n    return new Promise(function(resolve, reject) {\r\n      fs.writeFile(filename, html, function(err) {\r\n        if (err) {\r\n          return reject(err)\r\n        }\r\n        logger.info(self.getExtension() + ' file written: %s', filename)\r\n        resolve(filename)\r\n      })\r\n    })\r\n  }\r\n\r\n  getExtension() {\r\n    throw new Error('You must define an getExtension() in your writer')\r\n  }\r\n\r\n  getFilename() {\r\n    return path.join(this.converter.getOption('output'), this.converter.getOption('filename') + '.' + this.getExtension())\r\n  }\r\n\r\n  getCssTags() {\r\n    return this.getAssetsTags(this.converter.getCssFiles(), 'css').join('\\n')\r\n  }\r\n\r\n  getJsTags() {\r\n    return this.getAssetsTags(this.converter.getJsFiles(), 'js').join('\\n')\r\n  }\r\n\r\n  getExtraCss() {\r\n    var tocLevel = this.converter.getOption('tocLevel'),\r\n      tocLevelBaseCss = '> .nav > li '\r\n    return '.nav > li ' + tocLevelBaseCss.repeat(tocLevel) + '{display: none;}'\r\n  }\r\n\r\n  getAssetsTags(files, type) {\r\n    return files.map(function(file) {\r\n      return this.getAssetSingleTag(file, type)\r\n    }, this)\r\n  }\r\n\r\n  getAssetSingleTag(file, type) {\r\n    var tplIn, tplOut\r\n\r\n    if (type === 'js') {\r\n      tplIn = '<script>%s</script>'\r\n      tplOut = '<script src=\"%s\" type=\"javascript\"></script>'\r\n    } else {\r\n      tplIn = '<style>%s</style>'\r\n      tplOut = '<link href=\"%s\" rel=\"stylesheet\" />'\r\n    }\r\n\r\n    return this.converter.getOption('disableInlineAssets') ?\r\n      util.format(tplOut, path.basename(file)):\r\n      util.format(tplIn, fs.readFileSync(file, {encoding : 'utf8'}))\r\n  }\r\n\r\n  createImageLogoTag(path) {\r\n    throw new Error('You must define an createImageLogoTag(path) in your writer')\r\n  }\r\n\r\n  getLogoImage(){\r\n    let logoPath = this.getLogoImgPath();\r\n    return logoPath ? this.createImageLogoTag(logoPath) : ''\r\n  }\r\n\r\n  getLogoImgPath() {\r\n    let logoOption = this.converter.getOption('logoImage')\r\n    return logoOption ? datauri(path.resolve(logoOption)) : logoOption\r\n  }\r\n\r\n}\r\n\r\nmodule.exports = BaseWriter\r\n"]}